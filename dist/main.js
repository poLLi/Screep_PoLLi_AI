(()=>{"use strict";var e={d:(r,o)=>{for(var t in o)e.o(o,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:o[t]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r),e.d(r,{loop:()=>t});class o{static run(e){if(e.store.getFreeCapacity()>0){const r=e.room.find(FIND_SOURCES);e.harvest(r[0])===ERR_NOT_IN_RANGE&&e.moveTo(r[0],{visualizePathStyle:{stroke:"#ffaa00"}})}else{const r=e.room.find(FIND_STRUCTURES,{filter:e=>(e.structureType===STRUCTURE_EXTENSION||e.structureType===STRUCTURE_SPAWN||e.structureType===STRUCTURE_TOWER)&&e.store.getFreeCapacity(RESOURCE_ENERGY)>0});r.length>0&&e.transfer(r[0],RESOURCE_ENERGY)===ERR_NOT_IN_RANGE&&e.moveTo(r[0],{visualizePathStyle:{stroke:"#ffffff"}})}}}function t(){console.log("PoLLi AI Bot - Tick:",Game.time);for(const e in Memory.creeps)e in Game.creeps||(delete Memory.creeps[e],console.log("Clearing non-existing creep memory:",e));if(Object.values(Game.creeps).filter(e=>"harvester"===e.memory.role).length<2){const e="Harvester"+Game.time;console.log("Spawning new harvester: "+e);for(const r in Game.spawns){Game.spawns[r].spawnCreep([WORK,CARRY,MOVE],e,{memory:{role:"harvester"}});break}}for(const e in Game.creeps){s(Game.creeps[e])}}function s(e){"harvester"===e.memory.role&&o.run(e)}var a=global;for(var n in r)a[n]=r[n];r.__esModule&&Object.defineProperty(a,"__esModule",{value:!0})})();